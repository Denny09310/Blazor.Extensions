@inject IBottomSheetService BottomSheetService

<BottomSheet @ref="_bottomSheet" Title="@Title" Options="Options" OnWillDismiss="RestoreDefaults">
    <BottomSheetContent>
        @BottomSheetContent
    </BottomSheetContent>
</BottomSheet>

@code
{
    [Parameter]
    public BottomSheetOptions Options { get; set; } = new();

    private BottomSheet _bottomSheet = default!;

    private RenderFragment? BottomSheetContent { get; set; }
    private string? Title { get; set; }

    protected override void OnInitialized()
    {
        EnsureCorrectEventsOptions(Options.Events);

        BottomSheetService.ShowRequested += HandleShowBottomSheet;
        BottomSheetService.HideRequested += HandleHideBottomSheet;
    }

    private async void HandleShowBottomSheet(string title, RenderFragment content, BottomSheetOptions? options)
    {
        BottomSheetContent = content;
        Title = title;

        if (options != null)
        {
            EnsureCorrectEventsOptions(options.Events);
            await _bottomSheet.UpdateOptions(options);
        }

        await InvokeAsync(async () =>
        {
            StateHasChanged();
            await _bottomSheet.ShowAsync();
        });
    }

    private async void HandleHideBottomSheet()
    {
        await InvokeAsync(async () =>
        {
            await _bottomSheet.HideAsync();
            StateHasChanged();
        });
    }

    private async Task RestoreDefaults()
    {
        BottomSheetContent = null;
        Title = null;

        await _bottomSheet.UpdateOptions(Options, merge: false);
    }

    private void EnsureCorrectEventsOptions(BottomSheetEventsOptions? options)
    {
        if (options?.OnWillDismiss != null)
        {
            throw new InvalidOperationException($"{nameof(BottomSheetOptions.Events.OnWillDismiss)} cannot be used inside the {nameof(BottomSheetProvider)}");
        }
    }
}
